<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QC0RXhpZgAATU0AKgAAAAgAAgEOAAIAAAB8AAAAJoKYAAIAAAAJ
        AAAAogAAAABNYWxlIHVzZXIgaWNvbiBpc29sYXRlZCBvbiBhIHdoaXRlIGJhY2tncm91bmQuIEFjY291
        bnQgYXZhdGFyIGZvciB3ZWIuIFVzZXIgcHJvZmlsZSBwaWN0dXJlLiBVbmtub3duIG1hbGUgcGVyc29u
        IHNpbGhvdWV0dGUAQWxsaXlhMjMAAP/bAEMACgcHCAcGCggICAsKCgsOGBAODQ0OHRUWERgjHyUkIh8i
        ISYrNy8mKTQpISIwQTE0OTs+Pj4lLkRJQzxINz0+O//bAEMBCgsLDg0OHBAQHDsoIig7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O//CABEIAmQCTAMBEQACEQEDEQH/
        xAAaAAEAAgMBAAAAAAAAAAAAAAAABAUBAwYC/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAH/2gAMAwEAAhAD
        EAAAAezAAAAAAAAAAAAAAIhCIqaTyD2bSSssmHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhFSkcyAAAAZ
        J62RIAAAAAAAAAAAAAAAAAAAAAAAAAAAANJTJDMgAAAAAGCcWy7wAAAAAAAAAAAAAAAAAAAAAAAAAAQC
        lTAAAAAAAAALRZhIPQAAAAAAAAAAAAAAAAAAAAAAAAKsqEyAAAAAAAAADB6Jy2puAAAAAAAAAAAAAAAA
        AAAAAAAK4pUyAAAAAAAAAAADJcrYAAAAAAAAAAAAAAAAAAAAAAEc51AAAAAAAAAAAAAMF2tgAAAAAAAA
        AAAAAAAAAAAAACgSIAAAAAAAAAAAAAAdEsgAAAAAAAAAAAAAAAAAAAAGg5tMgAAAAAAAAAAAAAEk6FQA
        AAAAAAAAAAAAAAAAAABVFUgAAAAAAAAAAAAAAwdAssAAAAAAAAAAAAAAAAAAAAokhAAAAAAAAAAAAAAA
        Fgt0AAAAAAAAAAAAAAAAAAAAc6kcAAAAAAAAAAAAAAA3HSKAAAAAAAAAAAAAAAAAAABzaaQAAAAAAAAA
        AAAAADB1S5AAAAAAAAAAAAAAAAAAABziaAAAAAAAAAAAAAAADB067AAAAAAAAAAAAAAAAAAAAc+kUAAA
        AAAAAAAAAAAAwdOuwAAAAAAAAAAAAAAAAAAAFKV6AAAAAAAAAAAAAAAYOqXIAAAAAAAAAAAAAAAAAAAK
        wqEAAAAAAAAAAAAAAA9nTqAAAAAAAAAAAAAAAAAAABFOeTIAAAAAAAAAAAAAAJZfqAAAAAAAAAAAAAAA
        AAAABg5ZAAAAAAAAAAAAAAALNbcAAAAAAAAAAAAAAAAAAAAHOpHAAAAAAAAAAAAAABaLbAAAAAAAAAAA
        AAAAAAAAAA55IwAAAAAAAAAAAAAALVbUAAAAAAAAAAAAAAAAAAAAHPpFAAAAAAAAAAAAAABbLaAAAAAA
        AAAAAAAAAAAAAAAoUhgAAAAAAAAAAAAAAuFsgAAAAAAAAAAAAAAAAAAAAUiQAAAAAAAAAAAAAAAXS2AA
        AAAAAAAAAAAAAAAAAANRANZWoAAAAAAAAAAAAAALZdhYAAAAAAAAAAAAAAAAAAAEMoEkGgAAAAAAAAAA
        AAAAHoll6oAAAAAAAAAAAAAAAAAAGs5hMgAAAAAAAAAAAAAAAtVtQAAAAAAAAAAAAAAAAAAAc4mgAAAA
        AAAAAAAAAAAwdGsgAAAAAAAAAAAAAAAAAAAFQViAAAAAAAAAAAAAAAbDplAAAAAAAAAAAAAAAAAAAAhl
        CgAAAAAAAAAAAAAAFityAAAAAAAAAAAAAAAAAAAAeTlkyAAAAAAAAAAAAAAC7WeAAAAAAAAAAAAAAAAA
        AAADmU1gAAAAAAAAAAAAAGDo1kAAAAAAAAAAAAAAAAAAAAAokhAAAAAAAAAAAAAAA6lcgAAAAAAAAAAA
        AAAAAAAAAhFCmQAAAAAAAAAAAAASy/UAAAAAAAAAAAAAAAAAAAAARiqSGAAAAAAAAAAAAC6WYbAAAAAA
        AAAAAAAAAAAAAAAAClK9AAAAAAAAAAAAMHRLJAAAAAAAAAAAAAAAAAAAAAABUFYgAAAAAAAAAAAGDpV3
        AAAAAAAAAAAAAAAAAAAAAAArCoQAAAAAAAAAAADB1S5AAAAAAAAAAAAAAAAAAAAAABCKJAAAAAAAAAAA
        ANh0ygAAAAAAAAAAAAAAAAAAAAAAeDl0yAAAAAAAAAAACaXqgAAAAAAAAAAAAAAAAAAAAAADn0igAAAA
        AAAAAAAulsAAAAAAAAAAAAAAAAAAAAAAAAQCjTIAAAAAAAAAAPZ0q+gAAAAAAAAAAAAAAAAAAAAAAAYO
        dTQAAAAAAAAAAYLlbIAAAAAAAAAAAAAAAAAAAAAAAAEY55AAAAAAAAAAJRfrkAAAAAAAAAAAAAAAAAAA
        AAAAAArylQAAAAAAAADYdEuwAAAAAAAAAAAAAAAAAAAAAAAAAA5hPAAAAAAAAALdbMAAAAAAAAAAAAAA
        AAAAAAAAAAAAHMJ4AAAAAAAABcLZAAAAAAAAAAAAAAAAAAAAAAAAAAA5hPAAAAAAAAALhbIAAAAAAAAA
        AAAAAAAAAAAAAAAAAHMJ4AAAAAAAABcLZAAAAAAAAAAAAAAAAAAAAAAAAAAA5hPAAAAAAAAALhbIAAAA
        AAAAAAAAAAAAAAAAAAAAAAHMJ4AAAAAAAABcLZAAAAAAAAAAAAAAAAAAAAAAAAAAwVBWJkAAAAAAAAGw
        vVkgAAAAAAAAAAAAAAAAAAAAAAAAjlImgAAAAAAAAAAFqtoZAAAAAAAAAAAAAAAAAAAAAABqKor0AAAA
        AAAAAAAA2lss4yAAAAAAAAAAAAAAAAAAAACMVqQAAAAAAAAAAAAAAYN5ZLYHoAAAAAAAAAAAAAAAAAA0
        kEgJHMgAAAAAAAAAAAAAAAyTicswyAAAAAAAAAAAAAADBGIZCSOZAAAAAAAAAAAAAAAAAABkmE1ZhsAA
        AAAAAAAAABqIZDSIeDIAAAAAAAAAAAAAAAAAAAAAMEgmLMJRkAAAAAAAA0EAhJHMgAAAAAAAAAAAAAAA
        AAAAAAAAAGD0TVnEw9AAAAAGCCVqRTIAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRYLZm0AAAEUpkjmQAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACzW1PQABWFQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8vl2gFcUq
        ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuOhX2ajm0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
        xW5KgrEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTrz6aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAXi0iYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKIoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP/EACsQAAICAQMDAwMEAwAAAAAAAAIDAQRQABJAERMzITFgIzI0EBQiMCAkkP/a
        AAgBAQABBQLmnYWGiulqbDZ1vKf13nGosOjQ3S0NtRaiYmM6yyC9Mcxn9cTIyFw40twMzTGCuG2TZwF2
        jDS2g2Ms+zC9TMlPBj0lVvUWUzqJicnYs9OPEyMrtmOgYLIx9l+zlRMjKLMMxzmdpfvPLrP342yze3me
        0pb3V4px9tXOrs7bcVdL059c+4nE256v59MujMTY/I56Z2uxLvNz/bFP8+AD7MRaj/YwAePEXI+r8Jux
        /DnrjqzE2R3I59WOr8TPrExtnnUo9cVY/I51LF2fyOdSxdn8jnUvtxVvz86l48Vc83Op+HEMPtgFzqV3
        7ucpsJqIs90sPa/H0R7084i3aqR9fDmO4MDSH0xDx2uwCB2JxF0fXnrHe3E2h3I59Mep4mY3Dz6cdE4p
        sdG85EdEYq2PR3N6dde0Yq0vuL5tUN7sZ+3VJW4+vyq6xOqACuMbd8nKr+iMdd9+Ur0Vjrsfw+E2o6o5
        K43Nx5DuDk1B6uyFkNjuRUDarIW17lccA7hxHSMi5faZxqito5Jyu6v24qE908pYR3OItctMAhY5U/Jw
        qX2ZY/JwqXjyx+ThUvHlj8nCpePLH5OFS8eWPycKl48p7ada68RbCUSnC2MkxwK01xt43tKreonrGONg
        Lhlsi5S2mrS7YFjDetejtmWveeYDTXoLgzqCgowptANHdjRvYeCiZGQuMjQ2lFr3wBWFDoruie08QJSO
        htsjQ3FzoTE+STADRXAjRW2zoiIseL2jobs6GyouGbVr0V3RPaeWEpHQ22RoLay1ExMf2MtgOjsMPOCR
        BIXJjQMBkf0NeKtMcbfgHtKrfTUTEx/jYs7fginEqQMWD+tl+z4MpsqMSgh0w4WEzJT8GqM6Fq6fr8Hi
        ekiW4Xzuf8IqT1QXqXwhTNg/85P/xAAUEQEAAAAAAAAAAAAAAAAAAADA/9oACAEDAQE/ATIX/8QAFBEB
        AAAAAAAAAAAAAAAAAAAAwP/aAAgBAgEBPwEyF//EADEQAAEBBQYFAwQCAwAAAAAAAAECABEhQFASIjFR
        YXEyQWCBkQNysRATMFIgkiOQof/aAAgBAQAGPwKdxecg11AG7cfhorV5+vGry3H5a8gHZovTuzwX15wv
        HRomGQ/G9Jds18WmumOVaeos4XUyDlXg109qvZTFXwz1F5kniBZ3q+W4x3aFTsIx5mXeku2a/eDPSahY
        TxfE08FxayqCvmnWufJnnGcsK4vmm6JhOvGLP586WpU/ocaWlPegDMQNK2FAKcxSl0BB1pS9+il70FO1
        JVrQU7UkHMdFJVkaAka0pWkaANI0pzEZT6zS1z66WufXS1T6t6X2n1e6lj2z/eklR5M5aXDNkT6ScTya
        yUuNIV9Eg4pM+NA2wpBTmKEpXakqHegpFJSvtQEp1pR0jQFKyFKIzoD8zS1jWfRtS3/sJ52dMhimefyT
        TbViLbibAUHvZyQ4U5J0m0bU9HebR7aek69FHSaSNagU5iaf+oqJ1jM2v2qNrmmYCRzZwqTuRwl/uHFW
        FTdz5M4yseEY1W2ni+ZSyGspqyvcZNW9XV7jJq3q6vcZNW9XV7jJq3q6vcZNW9XV7jJq3q1n0/7Sj0tD
        HKpxMcmjAZSzwzvV/szxT7xczkXRnNXT2ZyrppkVRyDXLrPMTO3TDJr4ss8F9GvKAa4l+7RV2FCeku2a
        8ApsbO7QoHE/ZriPLRX4pF0kbNFymvApa6oGZvKAa6CpoOS15RO9Pgs92vo8NxO3k7ymuJ8tFfirXSRs
        15ymjd3Z4/LdvHRsXDSuPSSG/wAgfqGul/4czk0TDLoB4gWd6nlngvH8rHp48zl0JDDJrSf4WE8R/wCd
        DPHcMFDA/QqPJnnE9D/bOBw+iUd+iHjEMFDmyzq7ol2RcxOvRLtf9cv/xAArEAEAAAQFAwQCAwEBAAAA
        AAABABEhMUBBUFFhcZHwgaGxwWDREDDxIJD/2gAIAQEAAT8hxtPfWMI7wpxe2dEobodXE3eJpZSC0Lo4
        z09AwH3BKKQk4RJSG469Pug5PWKLL6I/rn4vdRSQG5Rj3dKOtUetjNiY9ALvXAe/HfvE0Vs1c1ewHtwf
        sTNwSQRCyRR9ifUWkuz5gGaE3NTrX+Dh5wD3Uoog5CjFfPczNQYT6ruzFGXBZIkEvJ204KXWDdhVEmqr
        jJObRZ01Mw2nXPGigkhUYIrRQbOlyEuFOuPkyuX+2l9bs3nroE8OlBTNk0DbOcdTSlNOT40D0Ud6fhSz
        uLldKMi8U0BtCm3DSZHAH20BtBkHDSZXDe3+6A2gJEtJn8I7/wCaBycdK6DezQJu2v0+9KAiswiN1Jx5
        bmhpZADc+DH/AF/el/C+DH29RpZ9SXxj7/Swk+Tj7rxQ0s1PFXHmTd3pIVUZIpgbI2g1tx+seEU0Zbqs
        IppExHSBOXx8/wATSW3U8MegOUoInTbrpHJwQW0HrNk0nY5ZPXQZs3lN66TJ3xN530Dblq6aVyOloHSW
        7/5pRo2EmKlG+P6qn6+tL6mcfKnV30vi8z18ljhMN1IgAAsaWs0zrHO8ThEZJLFyZDKjZiSSZr1y01mM
        ZuO0SOlcXIlkvvp6eDrJcWO6aeavi2LElsPjT+lpfbFNoCQG2nz3uHFc5nUCazCKlG5fE8Xmevk9R4HS
        +8TWF1P01GhN30zxCZudiAIJASDUp6N7D5wP0NTJMqq5hFISSiYW1PncarLSabmEBPVdiAoSDVvKb4Pz
        +NX8pvg/L4NX8pvg/L4NX8pvg/L4NX8pvg/L4NX8pvg/B4NVUCrIM4edZGf6YSbPqZMZeG7y1My9kN4V
        9CcMKCIlki3S4fcACCOZp8wH8mKY8i8XVWa3XEoZeasx7y1u+mUyd1DFMEu92FZgpm433/KkU5luVIlR
        DcdG7HmcAo/Kgi54dAi2gzwHupRQQezFNUvN4EE1M3MfaL+VtVDfY/qLwBtRpCc1eUZfeaMXgOkyPbhc
        T2nFj9dhGSzgmx7iLT7iDaqMoPL+o392pgRJjMwVkx2zjK9f9YvAG1MS1VOfVUW8PZihTvs7xMQI5n9t
        D+E7xT3jU65MDeIp0l6kTwfDM/pp7wmGrWzb8AFBEMyFkOZtPmAQksn/AFNKRFVVZrdfwOZ63d5wbSZ8
        f8MJ+47Pwa5ofUhEZhM/jIKW3hS80m/g8+TM6v4mByr+vv8ACEK8TIK2BOOEPYp+Ey7dfb7hckn8Jdg3
        m/8AOX//2gAMAwEAAgADAAAAEAAAAAAAAAAAAAABB++/JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP222
        231AAAAAAAAAAAAAAAAAAAAAAAAAAAABH22222233AAAAAAAAAAAAAAAAAAAAAAAAAAAJ2222222234I
        AAAAAAAAAAAAAAAAAAAAAAAABO22222222233oAAAAAAAAAAAAAAAAAAAAAAAB2222222222223AAAAA
        AAAAAAAAAAAAAAAAABO2222222222223wAAAAAAAAAAAAAAAAAAAAAA22222222222222+AAAAAAAAAA
        AAAAAAAAAAAB222222222222222wAAAAAAAAAAAAAAAAAAAAI2222222222222234AAAAAAAAAAAAAAA
        AAAAAG2222222222222228AAAAAAAAAAAAAAAAAAAAG2222222222222222AAAAAAAAAAAAAAAAAAAAG
        222222222222222/AAAAAAAAAAAAAAAAAAAAO2222222222222223AAAAAAAAAAAAAAAAAAAAO222222
        2222222222AAAAAAAAAAAAAAAAAAAAE2222222222222222AAAAAAAAAAAAAAAAAAAAA222222222222
        222+AAAAAAAAAAAAAAAAAAAAB222222222222222+AAAAAAAAAAAAAAAAAAAAB2222222222222224AA
        AAAAAAAAAAAAAAAAAAB2222222222222224AAAAAAAAAAAAAAAAAAAAA222222222222222wAAAAAAAA
        AAAAAAAAAAAAB2222222222222224AAAAAAAAAAAAAAAAAAAAB2222222222222224AAAAAAAAAAAAAA
        AAAAAAA2222222222222224AAAAAAAAAAAAAAAAAAABBG222222222222225AAAAAAAAAAAAAAAAAAAB
        P222222222222222+wAAAAAAAAAAAAAAAAAABO2222222222222223AAAAAAAAAAAAAAAAAAAAG22222
        2222222222+AAAAAAAAAAAAAAAAAAAAA222222222222222+AAAAAAAAAAAAAAAAAAAAA22222222222
        2222wAAAAAAAAAAAAAAAAAAAAB222222222222222wAAAAAAAAAAAAAAAAAAAAB222222222222223wA
        AAAAAAAAAAAAAAAAAAAB222222222222223wAAAAAAAAAAAAAAAAAAAAAP2222222222222/wAAAAAAA
        AAAAAAAAAAAAAAJ2222222222222wAAAAAAAAAAAAAAAAAAAAAABG2222222222234AAAAAAAAAAAAAA
        AAAAAAAABG2222222222234AAAAAAAAAAAAAAAAAAAAAABG222222222222wAAAAAAAAAAAAAAAAAAAA
        AABG222222222222wAAAAAAAAAAAAAAAAAAAAAAAO222222222223wAAAAAAAAAAAAAAAAAAAAAAAG22
        2222222223AAAAAAAAAAAAAAAAAAAAAAAAJ222222222223AAAAAAAAAAAAAAAAAAAAAAAAJ22222222
        2234AAAAAAAAAAAAAAAAAAAAAAAABO22222222224AAAAAAAAAAAAAAAAAAAAAAAAAI222222222+AAA
        AAAAAAAAAAAAAAAAAAAAAAAA2222222224AAAAAAAAAAAAAAAAAAAAAAAAAAA222222222wAAAAAAAAA
        AAAAAAAAAAAAAAAAAA222222222wAAAAAAAAAAAAAAAAAAAAAAAAAAA222222222wAAAAAAAAAAAAAAA
        AAAAAAAAAAAA222222222wAAAAAAAAAAAAAAAAAAAAAAAAAAA222222222wAAAAAAAAAAAAAAAAAAAAA
        AAAAAJ222222222/AAAAAAAAAAAAAAAAAAAAAAAAAB22222222223wAAAAAAAAAAAAAAAAAAAAAAAAm2
        22222222223xAAAAAAAAAAAAAAAAAAAAAA+2222222222222+wAAAAAAAAAAAAAAAAAABA+222222222
        22222223AAAAAAAAAAAAAAABAP2222222222222222222/wAAAAAAAAAAAAIO+222222222222222222
        2223+AAAAAAAAABJ+2222222222222222222222222/0IAAAAAJH2222222222222222222222222222
        22AAAAAH2222222222222222222222222222222+IAAI2222222222222222222222222222222223AA
        O22222222222222222222222222222222224A222222222222222222222222222222222228I222222
        22222222222222222222222222222/G222222222222222222222222222222222222O222222222222
        22222222222222222222222222222222222222222222222222222222222222222222222222222222
        22222222222222222222222222222222222222222222222222222222222222222222222222222222
        22222222222222222222222222222222222222222222222222222222222222222222222222222222
        22222222222222222222222222222222222222222222222222222222222222222222222222222222
        22222222222222222222222222222222222222222222222222222222222222222222222222//xAAU
        EQEAAAAAAAAAAAAAAAAAAADA/9oACAEDAQE/EDIX/8QAFBEBAAAAAAAAAAAAAAAAAAAAwP/aAAgBAgEB
        PxAyF//EACwQAQABAQYGAgICAwEAAAAAAAERIQAxQVBRoUBhcYGRwbHRYPAw4RAg8ZD/2gAIAQEAAT8Q
        41Zg2BL6O7ZhCMFJ7ER5bSYG4BDuE723oR7spenq2NsjFvFWD3aAgphKd4ne1DL1R7zZQSsKXkk82LIt
        wke5nzio6LUXPBu2lZX/AGmL3sAEBH8XOAoJ662ROTd9LtYOBorTe2PbOr31cVXQLTQWpPQ5vRvYAICP
        5oqOJUdLQKvOU9MXfzaIVGg6h7uzeXHEHyc+Vr8q3wGhy4KrnBUJYyEyXTp6jHptZCOgH4iwl7uSRzNH
        T9C2nPnh1u4bm40LaygfSgfTt1tHxG8p1DMKYY02v2O1+lgAg4m8zMq/vK3PChToaPL9MtfQJV4l332s
        +dqjFeL7wlRMLNc/qYfs/vXLXZTLzcTzTtxr52gLxtBEon+kN+VuiiJ1qG7YII46jFHpmnY7LlcI2/7B
        B8vHHpJDjZ0817VMe5D3yqTLhHOr7MgmJ/RHZ2yrpVeAesgUnSulT5yrfsgUOUOpYRBKjlPQo+Q+8gv+
        lpsxbYylHOBeB6yC96W5BFsZS+BeQn6ZAVYXpBYDFwQZTqgvaJ9Mgo/IdOUk7ZVAi+B3S7DkGmynjKgU
        ZBE1G16X+sMcep1wLkVX14ysHIJI5rO7x93qyu3fH41/1hyuJ9D2Hrjx1RNv7yuYan5PXHnnpGViGGQe
        Ps4/mhtg9ZSfyCYYqwHlLEalgknVy52h0b8P24+g0jML2iMbTkknAxeda5QxBMT7BW15ZpWUZvUp4o8c
        et6Hnd17vqyHg3APeUTWxWdJItKEkOJkMLS47BL8njKaP7Eq+VO2QLArhZRkU1wVX5jKYkKI3Sp85AnI
        kUOSrsOVT0Jg5UX7TkE6XAeq+t2VXwJ6CRYAggUTnx/6nDKxXCIcOSybJxzdbmsV1q95WsQYEuSjtu46
        4d3WWCxhQAByyuUxUYVGDxXsWAkzS0qSgYdEk2eLSahUgopf8lmXkU2GAe+2WtV2yqydWUbWJn/pJ64s
        EisNEZEiVKForppgVV1Vq5dD/wAgX74uF6nyr7y+6WAX9deKWBbOreHZl8mN3S+uKKsCVILGbcAMviwl
        J8g7LxSQ01ByGXYcwZKBl0ki0UGEgaJxMsiolzUNsxUkR55+0vfiZ0o8Yoe3vmKRMo9eB8PbiJohiU7j
        4sVwYGAXGYoJCSNnJN9csTt9cOkIBAcP739AzOLQdJfRustB8i8dOFaRJJerD7cupYAACAwzSdED0OnX
        R7dKiiIlESE4OlHNY6a1o7jxvXFeebfrNXBgmgmmezN/1mr8KE/WavwoT9Zq/ChP1mr8KE/WavwiwywJ
        UwBaYa7uF9OvjW13B0AZv7nme7VViTfOjU5/GZ3/AJJqV9HNtGnCymndxeGeC0ohHrYWBK4Cj0F3Up0s
        GFpEkTrl8a43DXoF7aTWmgvpgb9rKqiJRKvN4mSwJmq7WHUtB1PXX0+0WESRkcrmwD1jTl3i08XVVfRv
        1s+vYPK93jXwUHPe2HaLQPWifZ472Jv9wkyYGoXyZXYraSQa+xe7WmRD9Nq91sAICMh5mtCbQOqHuKbW
        iFvAQem9jpGqJI8eoFUAvW0oCOb2od7Kkh09Z92lBty+1Xu2ALi/J5PxeoT11tBhxkN4ptaFMbLuiu1g
        5jrwlOphxI1TiYEvQvbSglgpN3a7WmTRvkGm1lZrUkqHQuLXZbBI4lziWjzop718NhwCYwN33aAIpgU9
        7t7AhJcjI8FTNDa+BWx1S6NB4X+S0oJuV2q92wBWKt7msma3yE9TG0acwG8U2tCo3R8FPMWAVbCSPf8A
        kUBVgMbJsxaoPX6TaSk3/Y32ALjO9dETgepc97RRek9xc9otQXL7nUGp/CFPOVNe+hZUaTR7te/4Bd5w
        eE72ewKK46D5PFjaBKJH/aDRFL05DV+PhUMiUSrqv4HMiZLKcxo87Th2iN6xEwf9KbYSd/2O3iwAQfgp
        Ceiwj9mDYMcwH+Dekoalwd20wxE1fwd71GXDEdyvbn/hFVB8p+nL8IX2ANzGS1xoz0SbaeQOX9g/hMoX
        +obWS59wr+EwmJNgev8Azl//2Q==
</value>
  </data>
</root>